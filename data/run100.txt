# Config
MEMORY_DEPTH = 3
INIT_LENGTH = int(2*MEMORY_DEPTH)
STRATEGY_LENGTH = int(4**MEMORY_DEPTH) + INIT_LENGTH

# payoff matrix
PAYOFF = {
    (COOPERATE,COOPERATE):(3,3),
    (DEFECT,COOPERATE):(5, 0),
    (COOPERATE,DEFECT):(0, 5),
    (DEFECT, DEFECT):(1,1)
}

ITERATIONS = 100

# parameters specific for genetic algorithm
MUTATION_RATE = 0.001
CROSSOVER_RATE = 0.5
POPULATION_SIZE = 100
GENERATIONS =100
ROULETTE_SELECTION=False # if false, top-k selection is used
SELECTION_SIZE = 10

# parameters for hill climbing
ROUNDS = 10 # for tournament scoring

# parameters for tabu search
TABU_SIZE = 5

# Output
Hill Climbing
Hill Climbing Complete
optimized strategy:  [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0]
Tabu Search
Tabu Search Complete
optimized strategy:  [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0]
Genetic Algorithm
Genetic Algorithms Complete
optimized strategy:  [1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0]
{'ALLC': (0, 14, 16),
 'ALLD': (26, 4, 0),
 'APAVLOV': (0, 18, 12),
 'EXT_ZD': (6, 12, 12),
 'GENETIC': (12, 5, 13),
 'GEN_ZD': (17, 9, 4),
 'GRIM': (4, 19, 7),
 'GTFT': (2, 20, 8),
 'HILL_CLIMBING': (22, 5, 3),
 'PAVLOV': (5, 16, 9),
 'RAND': (11, 9, 10),
 'STFT': (9, 21, 0),
 'TABU_SEARCH': (15, 8, 7),
 'TF2T': (0, 15, 15),
 'TFT': (0, 17, 13)}